import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    public static void insertionSort1(int n, List<Integer> arr) {
 
    int end,key,j;
    end=arr.size()-1;
    for(int i=0;i<=end;i++){
        key=arr.get(i);
        j=i-1;
         while (j>=0 && arr.get(j)>key){
             arr.set(j+1,arr.get(j));
             j=j-1;
         for(int k=0;k<=end;k++){
             System.out.print(arr.get(k) + " ");
         }
           System.out.println();
         }
         arr.set(j+1,key);
    }
    for(int k=0;k<=end;k++){
        System.out.print(arr.get(k) + " ");
    }
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.insertionSort1(n, arr);

        bufferedReader.close();
    }
}
